* TODO Search for TODOs and FIXMEs
* TODO Understand minor modes.
**  See `nomis-right-margin-mode`.
**  Compare with `fci-mode` and `whitespace-mode`.
**  Parameters?
**  Different ways of doing it?
* TODO Do you have other things that should be modes (like nomis-right-margin-mode)?
* DONE Report this bug in Emacs 24.3:
**  + What's happened to repetition of keyboard macros?
*** It used to do it once; now it repeats until error (I think).
**  + Done.  See https://groups.google.com/forum/#!search/emacs$20bug$20keyboard$20macro$2015126/gnu.emacs.bug/i2DKFcWfzfY/9QMePrbxpiQJ
* TODO Compiling
** Look into any compilation errors and warnings now, and do so when you make changes
** What about compiling these init files? And other ones you manually install?
*** Ah, Emacs uses a "newer" check to see if recompilation is needed.
**** This isn't going to work for you
* TODO Consider Emacs Prelude
** (or parts of it, like the project thing which allows grepping across a project)
* TODO Stuff from better-defaults:
   ;; (progn
   ;; 
   ;;   (global-set-key (kbd "M-/") 'hippie-expand)
   ;;   (global-set-key (kbd "C-x C-b") 'ibuffer)
   ;; 
   ;;   (global-set-key (kbd "C-s") 'isearch-forward-regexp)
   ;;   (global-set-key (kbd "C-r") 'isearch-backward-regexp)
   ;;   (global-set-key (kbd "C-M-s") 'isearch-forward)
   ;;   (global-set-key (kbd "C-M-r") 'isearch-backward)
   ;; 
   ;;   (setq x-select-enable-clipboard t
   ;;         x-select-enable-primary t
   ;;         save-interprogram-paste-before-kill t
   ;;         apropos-do-all t
   ;;         mouse-yank-at-point t
   ;;         save-place-file (concat user-emacs-directory "places")
   ;;         backup-directory-alist `(("." . ,(concat user-emacs-directory
   ;;                                                  "backups")))))
* TODO See "stuff-from-starter-kit-for-reference.el"
* TODO Need a command for adding `...` around things
  (Or `...'? `foo` vs `foo' in lisp-mode.) 
* TODO `nomis-nrepl-rearrange-string-into-lines`:
** Not available everywhere with C-c C-f. Is there a good reason?
** You want different behaviour from Clojure and everywhere else.
*** Not so: even within Clojure, doc strings and your HTML strings are different.
*** Maybe the command can see what mode is active? (I like this.)
*** Maybe C-c C-f should handle the difference by being bound to different commands for Clojure and other things? (I don't like this.)

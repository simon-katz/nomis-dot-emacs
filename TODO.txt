TODO:

- What's happened to repetition of keyboard macros? It used to do it
  once; now it repeats until error (I think).

- `nomis-nrepl-rearrange-string-into-lines`:
  - Not available everywhere with C-c C-f. Is there a good reason?
  - You want different behaviour from Clojure and everywhere else.
    - Maybe the command can see what mode is active? (I like this.)
    - Maybe C-c C-f should handle the difference by being bound to different
      commands for Clojure and other things? (I don't like this.)

- Need a command for adding `...` around things.
  (Or `...'? `foo` vs `foo' in lisp-mode.) 

- C-x C-f is more aggressive than it used to be in finding things to match;
  it's taking me to kinda random places.

- Get your nrepl hacking working with new nrepl. Consider doing it properly
  (fork the Git repository, etc) and creating pull requests.

- Need to be sure of having a particular version of a package.
  - Can you append version numbers to package names?
    I thought I saw that somewhere, but it does seem not.
  - Consider manually installing packages
    - To .../dot-emacs-dot-d rather than to .emacs.d.
    - Have symbolic link from ~/.emacs.d to .../dot-emacs-dot-d.

- Compiling
  - What about compiling these init files? And other ones you manually
    install?
  - Look at compiling things in for-me/nomis-addons.

- Consider Emacs Prelude (or parts of it, like the project thing
  which allows grepping across a project).

- Stuff from better-defaults:
   ;; (progn
   ;; 
   ;;   (global-set-key (kbd "M-/") 'hippie-expand)
   ;;   (global-set-key (kbd "C-x C-b") 'ibuffer)
   ;; 
   ;;   (global-set-key (kbd "C-s") 'isearch-forward-regexp)
   ;;   (global-set-key (kbd "C-r") 'isearch-backward-regexp)
   ;;   (global-set-key (kbd "C-M-s") 'isearch-forward)
   ;;   (global-set-key (kbd "C-M-r") 'isearch-backward)
   ;; 
   ;;   (setq x-select-enable-clipboard t
   ;;         x-select-enable-primary t
   ;;         save-interprogram-paste-before-kill t
   ;;         apropos-do-all t
   ;;         mouse-yank-at-point t
   ;;         save-place-file (concat user-emacs-directory "places")
   ;;         backup-directory-alist `(("." . ,(concat user-emacs-directory
   ;;                                                  "backups")))))


- Starter kit
  - See "stuff-from-starter-kit-for-reference.el".
